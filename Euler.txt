2.
a=0
b=1
c=0
d=0
while(c<4000000):
	c=a+b
	a=b
	b=c
	# print(c)
	if c%2==0:
		print(c)
		d=d+c
print(d)

3.
Number = 600851475143
for i in range(2, Number + 1):
    if(Number % i == 0):
        isprime = 1
        for j in range(2, (i //2 + 1)):
            if(i % j == 0):
                isprime = 0
                break    
        if (isprime == 1):
            print(i)

4.
def larrgestPalindrome(n):

	upper_limit = (10**(n))-1
	lower_limit = 1 + upper_limit//10
	max_product = 0
	for i in range(upper_limit,lower_limit-1, -1):
	
		for j in range(i,lower_limit-1,-1):
			product = i * j
			if (product < max_product):
				break
			number = product
			reverse = 0
			while (number != 0):
			
				reverse = reverse * 10 + number % 10
				number =number // 10
			if (product == reverse and product > max_product):
				max_product = product
	return max_product
n = 3
print(larrgestPalindrome(n))

5.
import math
start = 2
end = 20
lst=[]
lst2=[]  
for i in range(start, end+1):
  if i>1:
    for j in range(2,i):
        if(i % j==0):
            break
    else:
        lst.append(i)
for i in lst:
	for j in range (1,10):
		if i**j>= end:
			lst2.append(i**(j-1))
			break
print(math.prod(lst2))

6.
x=100
y=(x)*(x+1)*((2*x)+1)/6
z=((x)*(x+1)/2)**2
print(z-y)

7.
# 7 10001st prime
import math
import itertools
def is_prime(n):
    for i in range(2,math.floor(math.sqrt(n)+1)):
        if n % i == 0:
            return False
        else:
            continue
    return True
p = 0
for x in itertools.count(1):
    if is_prime(x):
        if p == 10001:
            print(x)
            break
        p += 1
(the time complixity is decreased by sqrt

8.
